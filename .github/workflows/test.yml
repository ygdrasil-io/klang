name: Java CI with Gradle

on:
  push:
    branches: [ master, 'release/**' ]
  pull_request:
    branches: [ master, 'release/**' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        architecture: [x64, arm64]
        exclude:
          - os: macos-latest
            architecture: x64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up QEMU on ubuntu
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: ${{ matrix.architecture }}
      - name: Verify Architecture
        run: |
          arch=$(uname -m)
          if [[ "${{ matrix.architecture }}" == "x64" && "$arch" != "x86_64" ]]; then
            echo "Architecture is $arch but expected x86_64"
            exit 1
          elif [[ "${{ matrix.architecture }}" == "arm64" && ("$arch" != "aarch64" || "$arch" != "arm64") ]]; then
            echo "Architecture is $arch but expected aarch64 or arm64"
            exit 1
          fi
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 21
          cache: 'gradle'
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build & test klang
        run: |
          cd ./klang
          ./gradlew test
      - name: Bundle the build report
        if: failure()
        run: find . -type d -name 'reports' | zip -@ -r build-reports.zip
      - name: Upload the build report
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          path: build-reports.zip
